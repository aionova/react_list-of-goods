{"version":3,"sources":["components/Good/Good.jsx","components/GoodList/GoodList.jsx","shapes/GoodListShape.js","components/ListButton/ListButton.jsx","components/PageContent/PageContent.jsx","App.js","index.js"],"names":["Good","good","GoodList","PropTypes","shape","arrayOf","title","string","isRequired","index","number","goods","className","map","key","ListButton","onClickFunc","Button","type","onClick","variant","color","PageContent","reverseList","reset","sortByAlph","sortByLength","wordLength","selectLength","FormControl","Select","labelId","id","value","onChange","event","target","MenuItem","preparedGoods","App","state","showList","showStartButton","startList","setState","reverse","sort","a","b","localeCompare","length","filter","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c46175f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Good = ({ good }) => (\n  <div>\n    {good}\n  </div>\n);\n\nGood.propTypes = {\n  good: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { Good } from '../Good';\nimport { GoodListShape } from '../../shapes/GoodListShape';\nimport '../../App.scss';\n\nexport const GoodList = ({ goods }) => (\n  <ul className=\"App__goodList\">\n    <h1>Goods</h1>\n    {goods.map(good => (\n      <li className=\"App__goodList-item\" key={good.index}>\n        <Good good={good.title} />\n      </li>\n    ))}\n  </ul>\n);\n\nGoodList.propTypes = GoodListShape;\n","import PropTypes from 'prop-types';\n\nexport const GoodListShape = PropTypes.shape(PropTypes.arrayOf(PropTypes.shape({\n  title: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n}))).isRequired;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport '../../App.scss';\n\nexport const ListButton = ({ onClickFunc, title }) => (\n  <div className=\"App__button\">\n    <Button\n      type=\"button\"\n      onClick={onClickFunc}\n      variant=\"contained\"\n      color=\"primary\"\n    >\n      {title}\n    </Button>\n  </div>\n);\n\nListButton.propTypes = {\n  onClickFunc: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport PropTypes from 'prop-types';\n\nimport { GoodList } from '../GoodList/GoodList';\nimport { ListButton } from '../ListButton';\nimport { GoodListShape } from '../../shapes/GoodListShape';\n\nexport const PageContent = ({\n  reverseList,\n  reset,\n  sortByAlph,\n  sortByLength,\n  wordLength,\n  selectLength,\n  goods,\n}) => (\n  <div className=\"App__content\">\n    <div className=\"App__buttons\">\n      <ListButton onClickFunc={reverseList} title=\"reverse\" />\n      <ListButton\n        onClickFunc={sortByAlph}\n        title=\"sort alphabetically\"\n      />\n      <ListButton onClickFunc={reset} title=\"reset\" />\n      <ListButton\n        onClickFunc={sortByLength}\n        title=\"sort by length\"\n      />\n\n      <FormControl>\n        <Select\n          className=\"App__select\"\n          labelId=\"lengthSelector\"\n          id=\"lengthSelector\"\n          value={wordLength}\n          onChange={\n            event => selectLength(event.target)\n          }\n        >\n          <MenuItem value={1}>1</MenuItem>\n          <MenuItem value={2}>2</MenuItem>\n          <MenuItem value={3}>3</MenuItem>\n          <MenuItem value={4}>4</MenuItem>\n          <MenuItem value={5}>5</MenuItem>\n          <MenuItem value={6}>6</MenuItem>\n          <MenuItem value={7}>7</MenuItem>\n          <MenuItem value={8}>8</MenuItem>\n          <MenuItem value={9}>9</MenuItem>\n          <MenuItem value={10}>10</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n    <GoodList goods={goods} className=\"App__list\" />\n  </div>\n);\n\nPageContent.propTypes = PropTypes.shape({\n  reverseList: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  sortByAlph: PropTypes.func.isRequired,\n  sortByLength: PropTypes.func.isRequired,\n  wordLength: PropTypes.number.isRequired,\n  selectLength: PropTypes.func.isRequired,\n  goods: PropTypes.shape(GoodListShape).isRequired,\n}).isRequired;\n","import React from 'react';\nimport './App.scss';\nimport { PageContent } from './components/PageContent';\nimport { ListButton } from './components/ListButton';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst preparedGoods = goodsFromServer.map((good, index) => ({\n  title: good,\n  index,\n}));\n\nclass App extends React.Component {\n  state = {\n    showList: false,\n    showStartButton: true,\n    goods: preparedGoods,\n    wordLength: 1,\n  }\n\n  startList = () => {\n    this.setState({\n      showList: true,\n      showStartButton: false,\n    });\n  }\n\n  reverseList = () => {\n    this.setState(state => ({\n      goods: [...state.goods].reverse(),\n    }));\n  }\n\n  sortByAlph = () => {\n    this.setState(state => ({\n      goods: [...state.goods].sort((a, b) => a.title.localeCompare(b.title)),\n    }));\n  }\n\n  reset = () => {\n    this.setState(state => ({\n      goods: preparedGoods,\n    }));\n  }\n\n  sortByLength = () => {\n    this.setState(state => ({\n      goods: [...state.goods].sort((a, b) => a.title.length - b.title.length),\n    }));\n  }\n\n  selectLength = (target) => {\n    this.setState(state => ({\n      goods: preparedGoods.filter(\n        good => good.title.length >= target.value,\n      ),\n      wordLength: target.value,\n    }));\n  }\n\n  render() {\n    const { goods, showStartButton, showList, wordLength } = this.state;\n\n    return (\n      <div className=\"App\">\n        {showStartButton && (\n          <ListButton\n            onClickFunc={this.startList}\n            title=\"start\"\n          />\n        )}\n        {showList\n        && (\n          <PageContent\n            reverseList={this.reverseList}\n            reset={this.reset}\n            sortByAlph={this.sortByAlph}\n            sortByLength={this.sortByLength}\n            wordLength={wordLength}\n            selectLength={this.selectLength}\n            goods={goods}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}